name: Continuous Integration

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

env:
  NODE_VERSION: '20'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run linting
      run: yarn lint

    - name: Run type checking
      run: yarn typecheck

    - name: Build internationalization
      run: yarn intl:build

    - name: Run tests
      run: yarn test --coverage --watchAll=false
      env:
        NODE_ENV: test

    - name: Upload coverage to Codecov
      if: success()
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        fail_ci_if_error: false

    - name: Test web build
      run: yarn build-web
      env:
        NODE_ENV: production
        EXPO_PUBLIC_ENV: test

    - name: Check bundle size
      run: |
        BUNDLE_SIZE=$(du -sh web-build | cut -f1)
        echo "üì¶ Bundle size: $BUNDLE_SIZE" >> $GITHUB_STEP_SUMMARY

  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run security audit
      run: yarn audit --level moderate

    - name: Check for lockfile changes
      run: |
        if ! git diff --quiet yarn.lock; then
          echo "‚ùå yarn.lock has changes after install"
          exit 1
        fi